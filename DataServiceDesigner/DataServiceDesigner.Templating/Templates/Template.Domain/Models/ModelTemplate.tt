<#@ template language="C#" #>
<#@ parameter type="DataServiceDesigner.Domain.DomainDataService" name="DomainDataService" #>
<#@ parameter type="DataServiceDesigner.Domain.DomainObject" name="CurrentObject" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using BWF.DataServices.Metadata.Interfaces;
using System;

namespace <#=DomainDataService.GetNamespace()#>.<#=DomainDataService.Name#>.Domain
{
<#if (CurrentObject.SupportsIHaveId()) {#> 
    public class <#=CurrentObject.ObjectName#> : IHaveId<<#=CurrentObject.GetKeyType()#>>
<#} else {#>
	public class <#=CurrentObject.ObjectName#>
<#}#>
    {
<#foreach(var property in CurrentObject.Properties) {#>
        public virtual <#=property.PropertyType.ToCSharpType()#> <#=property.PropertyName#> { get; set; }
<#}#>
    }
}
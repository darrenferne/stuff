<#@ template language="C#" #>
<#@ parameter type="DataServiceDesigner.Domain.DomainDataService" name="DomainDataService" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using BWF.DataServices.Metadata.Fluent.Abstract;

namespace Brady.<#=DomainDataService.Name#>.Domain
{
    public class <#=DomainDataService.Name#>MetadataBundle : TypeMetadataBundle
    {
        public <#=DomainDataService.Name#>MetadataBundle()
           : base(<#=DomainDataService.Name#>Constants.DataServiceName,
<#var domainObjects = DomainDataService.Schemas.SelectMany(s => s.Objects).ToList();#>
<#for(int i = 0; i < domainObjects.Count; i++) {#>
<#var domainObject = domainObjects[i];#>
				new <#=domainObject.ObjectName#>Metadata()<#if (i < domainObjects.Count - 1) {#>,<#} else {#>)<#}#> 
<#}#>
        { }
    }
}

<#@ template language="C#" #>
<#@ parameter type="DataServiceDesigner.Domain.DomainDataService" name="DomainDataService" #>
<#@ parameter type="DataServiceDesigner.Domain.DomainObject" name="CurrentObject" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using AutoMapper;
using BWF.DataServices.Metadata.Attributes.Actions;
using BWF.DataServices.Support.NHibernate.Abstract;
using Brady.<#=DomainDataService.Name#>.Domain;

namespace Brady.<#=DomainDataService.Name#>.DataService
{
    [CreateAction("<#=CurrentObject.DisplayName#>")]
	[CreateAction("<#=CurrentObject.DisplayName#>")]
    [EditAction("<#=CurrentObject.DisplayName#>")]
    [DeleteAction("<#=CurrentObject.DisplayName#>")]
    public class <#=CurrentObject.ObjectName#>RecordType : ChangeableRecordType<<#=CurrentObject.ObjectName#>, <#=CurrentObject.GetKeyType()#>, <#=CurrentObject.ObjectName#>BatchValidator>
    {
        public override void ConfigureMapper()
        {
            Mapper.CreateMap<<#=CurrentObject.ObjectName#>, <#=CurrentObject.ObjectName#>>(); 
        }
    }
}

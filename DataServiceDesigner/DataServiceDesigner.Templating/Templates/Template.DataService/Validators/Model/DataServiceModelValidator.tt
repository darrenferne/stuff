<#@ template language="C#" #>
<#@ parameter type="DataServiceDesigner.Domain.DomainDataService" name="DomainDataService" #>
<#@ parameter type="DataServiceDesigner.Domain.DomainObject" name="CurrentObject" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using BWF.DataServices.Support.NHibernate.Abstract;
using FluentValidation;
using Brady.<#=DomainDataService.Name#>.Domain;

namespace Brady.<#=DomainDataService.Name#>.DataService
{
    public class <#=CurrentObject.ObjectName#>Validator : Validator<<#=CurrentObject.ObjectName#>>
    {
        public <#=CurrentObject.ObjectName#>Validator()
        {
            RuleFor(x => x.Id)
                .GreaterThanOrEqualTo(0L);
        }
    }
}
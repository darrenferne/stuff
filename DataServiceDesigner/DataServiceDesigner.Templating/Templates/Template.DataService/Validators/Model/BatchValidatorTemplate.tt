<#@ template language="C#" #>
<#@ parameter type="DataServiceDesigner.Domain.DomainDataService" name="DomainDataService" #>
<#@ parameter type="DataServiceDesigner.Domain.DomainObject" name="CurrentObject" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using BWF.DataServices.Core.Concrete.ChangeSets;
using BWF.DataServices.Support.NHibernate.Abstract;
using BWF.DataServices.Support.NHibernate.Validators;
using Brady.<#=DomainDataService.Name#>.Domain;

namespace Brady.<#=DomainDataService.Name#>.DataService
{
    public class <#=CurrentObject.ObjectName#>BatchValidator : BatchValidator<<#=CurrentObject.GetKeyType()#>, <#=CurrentObject.ObjectName#>>
    {
        protected override void SetupValidators(ChangeSetItems<<#=CurrentObject.GetKeyType()#>, <#=CurrentObject.ObjectName#>> items)
        {
            validator = new <#=CurrentObject.ObjectName#>Validator();
            deletionValidator = new <#=CurrentObject.ObjectName#>DeleteValidator();
        }
    }
}
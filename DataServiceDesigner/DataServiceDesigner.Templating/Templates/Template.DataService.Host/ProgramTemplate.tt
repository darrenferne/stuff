<#@ template language="C#" #>
<#@ parameter type="DataServiceDesigner.Domain.DataServiceSolution" name="DataServiceSolution" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using BWF.DataServices.Nancy.Interfaces;
using BWF.DataServices.StartUp.Concrete;
using BWF.Globalisation.Concrete;
using BWF.Globalisation.Interfaces;
using log4net.Config;
using <#=DataServiceSolution.GetNamespace()#>.<#=DataServiceSolution.Name#>.Domain;

namespace <#=DataServiceSolution.GetNamespace()#>.<#=DataServiceSolution.Name#>.DataService.Host
{
    class Program
    {
        static void Main(string[] args)
        {
            XmlConfigurator.Configure();

            var config = <#=DataServiceSolution.Name#>HostConfiguration.Read();

            IResourceQuerier resourceQuerier = new ResourceQuerier(typeof(BWF.Globalisation.Resources).Assembly);
            var globalisationProvider = new GlobalisationProvider(resourceQuerier, AvailableCultures.LanguageCultures, AvailableCultures.FormattingCultures);

            IDataServiceHostSettings hostSettings =
                new DataServiceHostSettings(
                    <#=DataServiceSolution.Name#>HostConstants.ServiceName,
                    <#=DataServiceSolution.Name#>HostConstants.ServiceDisplayName,
                    <#=DataServiceSolution.Name#>HostConstants.ServiceDescription,
                    config.HostUrl,
                    null,
                    globalisationProvider);

            var host = new DataServiceHost(hostSettings);
            host.Start();
        }
    }
}
